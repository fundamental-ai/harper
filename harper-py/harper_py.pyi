from typing import List, Optional

class LintError:
    start: int
    end: int
    message: str
    
    def __init__(self, start: int, end: int, message: str) -> None: ...
    def __repr__(self) -> str: ...
    def __str__(self) -> str: ...

class HarperLinter:
    def __init__(
        self, 
        user_dict_path: Optional[str] = None, 
        dialect: str = "American"
    ) -> None: ...
    
    def count_errors(self, text: str) -> int: ...
    def lint(self, text: str) -> List[LintError]: ...
    def has_errors(self, text: str) -> bool: ...
    def __repr__(self) -> str: ...

__doc__: str
__version__: str